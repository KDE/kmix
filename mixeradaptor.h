/*
 * This file was generated by dbusidl2cpp version 0.4
 * when processing input file org.kde.kmix.xml
 *
 * dbusidl2cpp is Copyright (C) 2006 Trolltech AS. All rights reserved.
 *
 * This is an auto-generated file.
 */

#ifndef MIXERADAPTATOR_H_24751149577322
#define MIXERADAPTATOR_H_24751149577322

#include <QtCore/QObject>
#include <QtCore/QMetaObject>
#include <QtCore/QVariant>
#include <dbus/qdbus.h>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Adaptor class for interface org.kde.kmix
 */
class KmixAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.kde.kmix")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.kde.kmix\" >\n"
"    <method name=\"setVolume\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"percentage\" />\n"
"    </method>\n"
"    <method name=\"setMasterVolume\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"percentage\" />\n"
"    </method>\n"
"    <method name=\"increaseVolume\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"    </method>\n"
"    <method name=\"decreaseVolume\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"    </method>\n"
"    <method name=\"volume\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"masterVolume\" >\n"
"      <arg direction=\"out\" type=\"i\" />\n"
"    </method>\n"
"    <method name=\"setAbsoluteVolume\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"      <arg direction=\"in\" type=\"l\" name=\"absoluteVolume\" />\n"
"    </method>\n"
"    <method name=\"absoluteVolume\" >\n"
"      <arg direction=\"out\" type=\"l\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"    </method>\n"
"    <method name=\"absoluteVolumeMin\" >\n"
"      <arg direction=\"out\" type=\"l\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"    </method>\n"
"    <method name=\"absoluteVolumeMax\" >\n"
"      <arg direction=\"out\" type=\"l\" />\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"    </method>\n"
"    <method name=\"setMute\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"      <arg direction=\"in\" type=\"b\" name=\"on\" />\n"
"    </method>\n"
"    <method name=\"toggleMute\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"    </method>\n"
"    <method name=\"mute\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"setRecordSource\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"      <arg direction=\"in\" type=\"b\" name=\"on\" />\n"
"    </method>\n"
"    <method name=\"isRecordSource\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"setBalance\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"    </method>\n"
"    <method name=\"isAvailableDevice\" >\n"
"      <arg direction=\"in\" type=\"i\" name=\"deviceidx\" />\n"
"      <arg direction=\"out\" type=\"b\" />\n"
"    </method>\n"
"    <method name=\"mixerName\" >\n"
"      <arg direction=\"out\" type=\"s\" />\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    KmixAdaptor(QObject *parent);
    virtual ~KmixAdaptor();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void absoluteVolume(int deviceidx);
    void absoluteVolumeMax(int deviceidx);
    void absoluteVolumeMin(int deviceidx);
    void decreaseVolume(int deviceidx);
    void increaseVolume(int deviceidx);
    bool isAvailableDevice(int deviceidx);
    bool isRecordSource(int deviceidx);
    int masterVolume();
    QString mixerName();
    bool mute(int deviceidx);
    void setAbsoluteVolume(int deviceidx);
    void setBalance(int deviceidx);
    void setMasterVolume(int percentage);
    void setMute(int deviceidx, bool on);
    void setRecordSource(int deviceidx, bool on);
    void setVolume(int deviceidx, int percentage);
    void toggleMute(int deviceidx);
    int volume(int deviceidx);
Q_SIGNALS: // SIGNALS
};

#endif

